{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\arp93\\\\Downloads\\\\crmcliente\\\\crmcliente\\\\pages\\\\editarcliente\\\\[pid].js\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation actualizarCliente($id: ID!, $input: ClienteInput) {\\n        actualizarCliente(id: $id, input: $input) {\\n            nombre\\n            email\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query obtenerCliente($id:ID!) {\\n        obtenerCliente(id:$id) {\\n            nombre\\n            apellido\\n            direccion\\n            ciudad\\n            pais\\n            email\\n            telefono\\n            empresa\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Layout from '../../components/Layout';\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport Swal from 'sweetalert2';\nvar OBTENER_CLIENTE = gql(_templateObject());\nvar ACTUALIZAR_CLIENTE = gql(_templateObject2());\n\nvar EditarCliente = function EditarCliente() {\n  var _Yup$object;\n\n  // obtener el ID actual\n  var router = useRouter();\n  var id = router.query.id; // console.log(id)\n  // Consultar para obtener el cliente\n\n  var _useQuery = useQuery(OBTENER_CLIENTE, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error; // Actualizar el cliente\n\n\n  var _useMutation = useMutation(ACTUALIZAR_CLIENTE),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      actualizarCliente = _useMutation2[0]; // Schema de validacion\n\n\n  var schemaValidacion = Yup.object((_Yup$object = {\n    nombre: Yup.string().required('El nombre del cliente es obligatorio'),\n    apellido: Yup.string().required('El apellido del cliente es obligatorio'),\n    empresa: Yup.string().required('El campo empresa  es obligatorio'),\n    email: Yup.string().email('Email no válido').required('El email del cliente es obligatorio'),\n    direccion: Yup.string().required('La direccion del cliente es obligatorio'),\n    ciudad: Yup.string().required('La direccion del cliente es obligatorio'),\n    pais: Yup.string().required('La direccion del cliente es obligatorio')\n  }, _defineProperty(_Yup$object, \"pais\", Yup.string().required('El pais del cliente es obligatorio')), _defineProperty(_Yup$object, \"telefono\", Yup.string().matches(phoneRegex, \"Número invalido\").required(\"Telefono es obligatorio\")), _Yup$object));\n  if (loading) return 'Cargando...'; // console.log(data.obtenerCliente)\n\n  var obtenerCliente = data.obtenerCliente; // Modifica el cliente en la BD\n\n  var actualizarInfoCliente = function actualizarInfoCliente(valores) {\n    var nombre, apellido, direccion, ciudad, pais, empresa, email, telefono, _await$actualizarClie, _data;\n\n    return _regeneratorRuntime.async(function actualizarInfoCliente$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            nombre = valores.nombre, apellido = valores.apellido, direccion = valores.direccion, ciudad = valores.ciudad, pais = valores.pais, empresa = valores.empresa, email = valores.email, telefono = valores.telefono;\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(actualizarCliente({\n              variables: {\n                id: id,\n                input: {\n                  nombre: nombre,\n                  apellido: apellido,\n                  direccion: direccion,\n                  ciudad: ciudad,\n                  pais: pais,\n                  empresa: empresa,\n                  email: email,\n                  telefono: telefono\n                }\n              }\n            }));\n\n          case 4:\n            _await$actualizarClie = _context.sent;\n            _data = _await$actualizarClie.data;\n            // console.log(data);\n            // Mostrar Alerta\n            Swal.fire('Actualizado', 'El cliente se actualizó correctamente', 'success'); // Redireccionar\n\n            router.push('/');\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 10]], Promise);\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Editar Cliente\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, __jsx(Formik, {\n    validationSchema: schemaValidacion,\n    enableReinitialize: true,\n    initialValues: obtenerCliente,\n    onSubmit: function onSubmit(valores) {\n      actualizarInfoCliente(valores);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, function (props) {\n    // console.log(props);\n    return __jsx(\"form\", {\n      className: \"bg-white shadow-md px-8 pt-6 pb-8 mb-4\",\n      onSubmit: props.handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 33\n      }\n    }, __jsx(\"div\", {\n      className: \"mb-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 37\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"nombre\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 41\n      }\n    }, \"Nombre\"), __jsx(\"input\", {\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"nombre\",\n      type: \"text\",\n      placeholder: \"Nombre Cliente\",\n      onChange: props.handleChange,\n      onBlur: props.handleBlur,\n      value: props.values.nombre,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 41\n      }\n    })), props.touched.nombre && props.errors.nombre ? __jsx(\"div\", {\n      className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 41\n      }\n    }, __jsx(\"p\", {\n      className: \"font-bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 45\n      }\n    }, \"Error\"), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 45\n      }\n    }, props.errors.nombre)) : null, __jsx(\"div\", {\n      className: \"mb-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 37\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"apellido\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 41\n      }\n    }, \"Apellido\"), __jsx(\"input\", {\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"apellido\",\n      type: \"text\",\n      placeholder: \"Apellido Cliente\",\n      onChange: props.handleChange,\n      onBlur: props.handleBlur,\n      value: props.values.apellido,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 41\n      }\n    })), props.touched.apellido && props.errors.apellido ? __jsx(\"div\", {\n      className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 41\n      }\n    }, __jsx(\"p\", {\n      className: \"font-bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 45\n      }\n    }, \"Error\"), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 45\n      }\n    }, props.errors.apellido)) : null, __jsx(\"div\", {\n      className: \"mb-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 37\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"nombre\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 41\n      }\n    }, \"Direcci\\xF3n\"), __jsx(\"input\", {\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"direccion\",\n      type: \"text\",\n      placeholder: \"Direcci\\xF3n Cliente\",\n      onChange: props.handleChange,\n      onBlur: props.handleBlur,\n      value: props.values.direccion,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 41\n      }\n    })), props.touched.direccion && props.errors.direccion ? __jsx(\"div\", {\n      className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 41\n      }\n    }, __jsx(\"p\", {\n      className: \"font-bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 45\n      }\n    }, \"Error\"), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 45\n      }\n    }, props.errors.direccion)) : null, __jsx(\"div\", {\n      className: \"mb-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 37\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"ciudad\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 41\n      }\n    }, \"Ciudad\"), __jsx(\"input\", {\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"ciudad\",\n      type: \"text\",\n      placeholder: \"Ciudad Cliente\",\n      onChange: props.handleChange,\n      onBlur: props.handleBlur,\n      value: props.values.ciudad,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 41\n      }\n    })), props.touched.ciudad && props.errors.ciudad ? __jsx(\"div\", {\n      className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 41\n      }\n    }, __jsx(\"p\", {\n      className: \"font-bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 45\n      }\n    }, \"Error\"), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 45\n      }\n    }, props.errors.ciudad)) : null, __jsx(\"div\", {\n      className: \"mb-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 37\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"pais\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 41\n      }\n    }, \"Pais\"), __jsx(\"input\", {\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"pais\",\n      type: \"text\",\n      placeholder: \"Pais Cliente\",\n      onChange: props.handleChange,\n      onBlur: props.handleBlur,\n      value: props.values.pais,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 41\n      }\n    })), props.touched.nombre && props.errors.pais ? __jsx(\"div\", {\n      className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 41\n      }\n    }, __jsx(\"p\", {\n      className: \"font-bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 45\n      }\n    }, \"Error\"), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 45\n      }\n    }, props.errors.pais)) : null, __jsx(\"div\", {\n      className: \"mb-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 37\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"empresa\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 41\n      }\n    }, \"Empresa\"), __jsx(\"input\", {\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"empresa\",\n      type: \"text\",\n      placeholder: \"Empresa Cliente\",\n      onChange: props.handleChange,\n      onBlur: props.handleBlur,\n      value: props.values.empresa,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 41\n      }\n    })), props.touched.empresa && props.errors.empresa ? __jsx(\"div\", {\n      className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 41\n      }\n    }, __jsx(\"p\", {\n      className: \"font-bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 45\n      }\n    }, \"Error\"), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 45\n      }\n    }, props.errors.empresa)) : null, __jsx(\"div\", {\n      className: \"mb-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 37\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 41\n      }\n    }, \"Email\"), __jsx(\"input\", {\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"email\",\n      type: \"email\",\n      placeholder: \"Email Cliente\",\n      onChange: props.handleChange,\n      onBlur: props.handleBlur,\n      value: props.values.email,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 41\n      }\n    })), props.touched.email && props.errors.email ? __jsx(\"div\", {\n      className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 41\n      }\n    }, __jsx(\"p\", {\n      className: \"font-bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 45\n      }\n    }, \"Error\"), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 45\n      }\n    }, props.errors.email)) : null, __jsx(\"div\", {\n      className: \"mb-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 37\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"telefono\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 41\n      }\n    }, \"Tel\\xE9fono\"), __jsx(\"input\", {\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"telefono\",\n      type: \"tel\",\n      placeholder: \"Tel\\xE9fono Cliente\",\n      onChange: props.handleChange,\n      onBlur: props.handleBlur,\n      value: props.values.telefono,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 41\n      }\n    })), props.touched.telefono && props.errors.telefono ? __jsx(\"div\", {\n      className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 41\n      }\n    }, __jsx(\"p\", {\n      className: \"font-bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 45\n      }\n    }, \"Error\"), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 45\n      }\n    }, props.errors.telefono)) : null, __jsx(\"input\", {\n      type: \"submit\",\n      className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\",\n      value: \"Editar Cliente\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 37\n      }\n    }));\n  }))));\n};\n\nexport default EditarCliente;","map":{"version":3,"sources":["C:/Users/arp93/Downloads/crmcliente/crmcliente/pages/editarcliente/[pid].js"],"names":["React","useRouter","Layout","useQuery","gql","useMutation","Formik","Yup","Swal","OBTENER_CLIENTE","ACTUALIZAR_CLIENTE","EditarCliente","router","id","query","variables","data","loading","error","actualizarCliente","schemaValidacion","object","nombre","string","required","apellido","empresa","email","direccion","ciudad","pais","matches","phoneRegex","obtenerCliente","actualizarInfoCliente","valores","telefono","input","fire","push","console","log","props","handleSubmit","handleChange","handleBlur","values","touched","errors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useRouter } from 'next/router'\nimport Layout from '../../components/Layout';\nimport { useQuery, gql, useMutation } from '@apollo/client'\nimport { Formik } from 'formik'\nimport * as Yup from 'yup'\nimport Swal from 'sweetalert2';\n\nconst OBTENER_CLIENTE = gql`\n    query obtenerCliente($id:ID!) {\n        obtenerCliente(id:$id) {\n            nombre\n            apellido\n            direccion\n            ciudad\n            pais\n            email\n            telefono\n            empresa\n        }\n    }\n`;\n\nconst ACTUALIZAR_CLIENTE = gql`\n    mutation actualizarCliente($id: ID!, $input: ClienteInput) {\n        actualizarCliente(id: $id, input: $input) {\n            nombre\n            email\n        }\n    }\n`;\n\nconst EditarCliente = () => {\n    // obtener el ID actual\n    const router = useRouter();\n    const { query: { id } } = router;\n    // console.log(id)\n\n    // Consultar para obtener el cliente\n    const { data, loading, error } = useQuery(OBTENER_CLIENTE, {\n        variables: {\n            id\n        }\n    });\n\n    // Actualizar el cliente\n    const [actualizarCliente] = useMutation(ACTUALIZAR_CLIENTE);\n\n    // Schema de validacion\n    const schemaValidacion = Yup.object({\n        nombre: Yup.string()\n            .required('El nombre del cliente es obligatorio'),\n        apellido: Yup.string()\n            .required('El apellido del cliente es obligatorio'),\n        empresa: Yup.string()\n            .required('El campo empresa  es obligatorio'),\n        email: Yup.string()\n            .email('Email no válido')\n            .required('El email del cliente es obligatorio'),\n        direccion: Yup.string()\n            .required('La direccion del cliente es obligatorio'),\n        ciudad: Yup.string()\n            .required('La direccion del cliente es obligatorio'),\n        pais: Yup.string()\n            .required('La direccion del cliente es obligatorio'),\n        pais: Yup.string()\n            .required('El pais del cliente es obligatorio'),\n        telefono: Yup.string().matches(phoneRegex, \"Número invalido\").required(\"Telefono es obligatorio\")\n    });\n\n\n    if (loading) return 'Cargando...';\n\n    // console.log(data.obtenerCliente)\n\n    const { obtenerCliente } = data;\n\n    // Modifica el cliente en la BD\n    const actualizarInfoCliente = async valores => {\n        const { nombre, apellido, direccion, ciudad, pais, empresa, email, telefono } = valores;\n\n        try {\n            const { data } = await actualizarCliente({\n                variables: {\n                    id,\n                    input: {\n                        nombre,\n                        apellido,\n                        direccion,\n                        ciudad,\n                        pais,\n                        empresa,\n                        email,\n                        telefono\n                    }\n                }\n            });\n\n            // console.log(data);\n\n            // Mostrar Alerta\n            Swal.fire(\n                'Actualizado',\n                'El cliente se actualizó correctamente',\n                'success'\n            )\n\n            // Redireccionar\n            router.push('/');\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return (\n        <Layout>\n            <h1 className=\"text-2xl text-gray-800 font-light\">Editar Cliente</h1>\n\n            <div className=\"flex justify-center mt-5\">\n                <div className=\"w-full max-w-lg\">\n\n                    <Formik\n                        validationSchema={schemaValidacion}\n                        enableReinitialize\n                        initialValues={obtenerCliente}\n                        onSubmit={(valores) => {\n                            actualizarInfoCliente(valores)\n                        }}\n                    >\n\n                        {props => {\n                            // console.log(props);\n                            return (\n                                <form\n                                    className=\"bg-white shadow-md px-8 pt-6 pb-8 mb-4\"\n                                    onSubmit={props.handleSubmit}\n                                >\n                                    <div className=\"mb-4\">\n                                        <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"nombre\">\n                                            Nombre\n                                        </label>\n\n                                        <input\n                                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                            id=\"nombre\"\n                                            type=\"text\"\n                                            placeholder=\"Nombre Cliente\"\n                                            onChange={props.handleChange}\n                                            onBlur={props.handleBlur}\n                                            value={props.values.nombre}\n                                        />\n                                    </div>\n\n                                    { props.touched.nombre && props.errors.nombre ? (\n                                        <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                            <p className=\"font-bold\">Error</p>\n                                            <p>{props.errors.nombre}</p>\n                                        </div>\n                                    ) : null}\n\n                                    <div className=\"mb-4\">\n                                        <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"apellido\">\n                                            Apellido\n                                        </label>\n\n                                        <input\n                                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                            id=\"apellido\"\n                                            type=\"text\"\n                                            placeholder=\"Apellido Cliente\"\n                                            onChange={props.handleChange}\n                                            onBlur={props.handleBlur}\n                                            value={props.values.apellido}\n                                        />\n                                    </div>\n\n                                    { props.touched.apellido && props.errors.apellido ? (\n                                        <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                            <p className=\"font-bold\">Error</p>\n                                            <p>{props.errors.apellido}</p>\n                                        </div>\n                                    ) : null}\n\n                                    <div className=\"mb-4\">\n                                        <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"nombre\">\n                                            Dirección\n                                        </label>\n\n                                        <input\n                                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                            id=\"direccion\"\n                                            type=\"text\"\n                                            placeholder=\"Dirección Cliente\"\n                                            onChange={props.handleChange}\n                                            onBlur={props.handleBlur}\n                                            value={props.values.direccion}\n                                        />\n                                    </div>\n\n                                    { props.touched.direccion && props.errors.direccion ? (\n                                        <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                            <p className=\"font-bold\">Error</p>\n                                            <p>{props.errors.direccion}</p>\n                                        </div>\n                                    ) : null}\n\n                                    <div className=\"mb-4\">\n                                        <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"ciudad\">\n                                            Ciudad\n                                        </label>\n\n                                        <input\n                                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                            id=\"ciudad\"\n                                            type=\"text\"\n                                            placeholder=\"Ciudad Cliente\"\n                                            onChange={props.handleChange}\n                                            onBlur={props.handleBlur}\n                                            value={props.values.ciudad}\n                                        />\n                                    </div>\n\n                                    { props.touched.ciudad && props.errors.ciudad ? (\n                                        <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                            <p className=\"font-bold\">Error</p>\n                                            <p>{props.errors.ciudad}</p>\n                                        </div>\n                                    ) : null}\n\n                                    <div className=\"mb-4\">\n                                        <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"pais\">\n                                            Pais\n                                        </label>\n\n                                        <input\n                                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                            id=\"pais\"\n                                            type=\"text\"\n                                            placeholder=\"Pais Cliente\"\n                                            onChange={props.handleChange}\n                                            onBlur={props.handleBlur}\n                                            value={props.values.pais}\n                                        />\n                                    </div>\n\n                                    { props.touched.nombre && props.errors.pais ? (\n                                        <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                            <p className=\"font-bold\">Error</p>\n                                            <p>{props.errors.pais}</p>\n                                        </div>\n                                    ) : null}\n\n                                    <div className=\"mb-4\">\n                                        <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"empresa\">\n                                            Empresa\n                                        </label>\n\n                                        <input\n                                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                            id=\"empresa\"\n                                            type=\"text\"\n                                            placeholder=\"Empresa Cliente\"\n                                            onChange={props.handleChange}\n                                            onBlur={props.handleBlur}\n                                            value={props.values.empresa}\n                                        />\n                                    </div>\n\n                                    { props.touched.empresa && props.errors.empresa ? (\n                                        <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                            <p className=\"font-bold\">Error</p>\n                                            <p>{props.errors.empresa}</p>\n                                        </div>\n                                    ) : null}\n\n                                    <div className=\"mb-4\">\n                                        <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"email\">\n                                            Email\n                                        </label>\n\n                                        <input\n                                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                            id=\"email\"\n                                            type=\"email\"\n                                            placeholder=\"Email Cliente\"\n                                            onChange={props.handleChange}\n                                            onBlur={props.handleBlur}\n                                            value={props.values.email}\n                                        />\n                                    </div>\n\n                                    { props.touched.email && props.errors.email ? (\n                                        <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                            <p className=\"font-bold\">Error</p>\n                                            <p>{props.errors.email}</p>\n                                        </div>\n                                    ) : null}\n\n                                    <div className=\"mb-4\">\n                                        <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"telefono\">\n                                            Teléfono\n                                        </label>\n\n                                        <input\n                                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                            id=\"telefono\"\n                                            type=\"tel\"\n                                            placeholder=\"Teléfono Cliente\"\n                                            onChange={props.handleChange}\n                                            onBlur={props.handleBlur}\n                                            value={props.values.telefono}\n                                        />\n                                    </div>\n                                    { props.touched.telefono && props.errors.telefono ? (\n                                        <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                            <p className=\"font-bold\">Error</p>\n                                            <p>{props.errors.telefono}</p>\n                                        </div>\n                                    ) : null}\n\n                                    <input\n                                        type=\"submit\"\n                                        className=\"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\"\n                                        value=\"Editar Cliente\"\n                                    />\n                                </form>\n                            )\n                        }}\n                    </Formik>\n                </div>\n            </div>\n\n        </Layout>\n    );\n}\n\nexport default EditarCliente;"]},"metadata":{},"sourceType":"module"}