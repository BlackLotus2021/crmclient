{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arp93\\\\Downloads\\\\crmcliente\\\\crmcliente\\\\pages\\\\nuevocliente.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Layout from '../components/Layout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { gql, useMutation } from '@apollo/client';\nimport { useRouter } from 'next/router';\nconst NUEVO_CLIENTE = gql`\n    mutation nuevoCliente($input: ClienteInput) {\n        nuevoCliente(input: $input) {\n            id\n            nombre\n            apellido\n            empresa\n            email\n            telefono\n        }\n    }\n`;\nconst OBTENER_CLIENTES_USUARIO = gql`\n    query obtenerClientesVendedor {\n        obtenerClientesVendedor {\n            id\n            nombre\n            apellido\n            empresa\n            email\n        }\n    }\n\n`;\n\nconst NuevoCliente = () => {\n  const router = useRouter(); // Mensaje de alerta\n\n  const {\n    0: mensaje,\n    1: guardarMensaje\n  } = useState(null); // Mutation para crear nuevos clientes\n\n  const [nuevoCliente] = useMutation(NUEVO_CLIENTE, {\n    update(cache, {\n      data: {\n        nuevoCliente\n      }\n    }) {\n      // Obtener el objeto de cache que deseamos actualizar\n      const {\n        obtenerClientesVendedor\n      } = cache.readQuery({\n        query: OBTENER_CLIENTES_USUARIO\n      }); // Reescribimos el cache ( el cache nunca se debe modificar )\n\n      cache.writeQuery({\n        query: OBTENER_CLIENTES_USUARIO,\n        data: {\n          obtenerClientesVendedor: [...obtenerClientesVendedor, nuevoCliente]\n        }\n      });\n    }\n\n  });\n  const formik = useFormik({\n    initialValues: {\n      nombre: '',\n      apellido: '',\n      direccion: '',\n      empresa: '',\n      email: '',\n      telefono: ''\n    },\n    validationSchema: Yup.object({\n      nombre: Yup.string().required('El nombre del cliente es obligatorio'),\n      apellido: Yup.string().required('El apellido del cliente es obligatorio'),\n      empresa: Yup.string().required('El campo empresa  es obligatorio'),\n      email: Yup.string().email('Email no válido').required('El email del cliente es obligatorio'),\n      direccion: Yup.string().required('La dirección del cliente es obligatorio')\n    }),\n    onSubmit: async valores => {\n      const {\n        nombre,\n        apellido,\n        empresa,\n        email,\n        telefono\n      } = valores;\n\n      try {\n        const {\n          data\n        } = await nuevoCliente({\n          variables: {\n            input: {\n              nombre,\n              apellido,\n              empresa,\n              email,\n              telefono\n            }\n          }\n        }); // console.log(data.nuevoCliente);\n\n        router.push('/'); // redireccionar hacia clientes\n      } catch (error) {\n        guardarMensaje(error.message.replace('GraphQL error: ', ''));\n        setTimeout(() => {\n          guardarMensaje(null);\n        }, 2000);\n      }\n    }\n  });\n\n  const mostrarMensaje = () => {\n    return __jsx(\"div\", {\n      className: \"bg-white py-2 px-3 w-full my-3 max-w-sm text-center mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, mensaje));\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Nuevo Cliente\"), mensaje && mostrarMensaje(), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, __jsx(\"form\", {\n    className: \"bg-white shadow-md px-8 pt-6 pb-8 mb-4\",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"nombre\",\n    type: \"text\",\n    placeholder: \"Nombre Cliente\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.nombre,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 29\n    }\n  })), formik.touched.nombre && formik.errors.nombre ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 29\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 33\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 33\n    }\n  }, formik.errors.nombre)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"apellido\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  }, \"Apellido\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"apellido\",\n    type: \"text\",\n    placeholder: \"Apellido Cliente\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.apellido,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 29\n    }\n  })), formik.touched.apellido && formik.errors.apellido ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 29\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 33\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 33\n    }\n  }, formik.errors.apellido)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"empresa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 29\n    }\n  }, \"Direcci\\xF3n\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"direccion\",\n    type: \"text\",\n    placeholder: \"Direcci\\xF3n Cliente\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.direccion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 29\n    }\n  })), formik.touched.direccion && formik.errors.direccion ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 29\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 33\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 33\n    }\n  }, formik.errors.direccion)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"empresa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 29\n    }\n  }, \"Empresa\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"empresa\",\n    type: \"text\",\n    placeholder: \"Empresa Cliente\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.empresa,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 29\n    }\n  })), formik.touched.empresa && formik.errors.empresa ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 29\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 33\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 33\n    }\n  }, formik.errors.empresa)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 29\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"Email Cliente\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 29\n    }\n  })), formik.touched.email && formik.errors.email ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 29\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 33\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 33\n    }\n  }, formik.errors.email)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"telefono\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 29\n    }\n  }, \"Tel\\xE9fono\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"telefono\",\n    type: \"tel\",\n    placeholder: \"Tel\\xE9fono Cliente\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.telefono,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 29\n    }\n  })), __jsx(\"input\", {\n    type: \"submit\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\",\n    value: \"Registrar Cliente\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default NuevoCliente;","map":{"version":3,"sources":["C:/Users/arp93/Downloads/crmcliente/crmcliente/pages/nuevocliente.js"],"names":["React","useState","Layout","useFormik","Yup","gql","useMutation","useRouter","NUEVO_CLIENTE","OBTENER_CLIENTES_USUARIO","NuevoCliente","router","mensaje","guardarMensaje","nuevoCliente","update","cache","data","obtenerClientesVendedor","readQuery","query","writeQuery","formik","initialValues","nombre","apellido","direccion","empresa","email","telefono","validationSchema","object","string","required","onSubmit","valores","variables","input","push","error","message","replace","setTimeout","mostrarMensaje","handleSubmit","handleChange","handleBlur","values","touched","errors"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Layout from '../components/Layout';\nimport { useFormik } from 'formik'\nimport * as Yup from 'yup'\nimport { gql, useMutation } from '@apollo/client';\nimport { useRouter } from 'next/router'\n\nconst NUEVO_CLIENTE = gql`\n    mutation nuevoCliente($input: ClienteInput) {\n        nuevoCliente(input: $input) {\n            id\n            nombre\n            apellido\n            empresa\n            email\n            telefono\n        }\n    }\n`;\n\nconst OBTENER_CLIENTES_USUARIO = gql`\n    query obtenerClientesVendedor {\n        obtenerClientesVendedor {\n            id\n            nombre\n            apellido\n            empresa\n            email\n        }\n    }\n\n`;\n\nconst NuevoCliente = () => {\n\n    const router = useRouter();\n\n    // Mensaje de alerta\n    const [mensaje, guardarMensaje] = useState(null);\n\n\n    // Mutation para crear nuevos clientes\n    const [nuevoCliente] = useMutation(NUEVO_CLIENTE, {\n        update(cache, { data: { nuevoCliente } }) {\n            // Obtener el objeto de cache que deseamos actualizar\n            const { obtenerClientesVendedor } = cache.readQuery({ query: OBTENER_CLIENTES_USUARIO });\n\n            // Reescribimos el cache ( el cache nunca se debe modificar )\n            cache.writeQuery({\n                query: OBTENER_CLIENTES_USUARIO,\n                data: {\n                    obtenerClientesVendedor: [...obtenerClientesVendedor, nuevoCliente]\n                }\n            })\n        }\n    })\n\n\n    const formik = useFormik({\n        initialValues: {\n            nombre: '',\n            apellido: '',\n            direccion:'',\n            empresa: '',\n            email: '',\n            telefono: ''\n        },\n        validationSchema: Yup.object({\n            nombre: Yup.string()\n                .required('El nombre del cliente es obligatorio'),\n            apellido: Yup.string()\n                .required('El apellido del cliente es obligatorio'),\n            empresa: Yup.string()\n                .required('El campo empresa  es obligatorio'),\n            email: Yup.string()\n                .email('Email no válido')\n                .required('El email del cliente es obligatorio'),\n            direccion: Yup.string()\n                .required('La dirección del cliente es obligatorio')\n        }),\n        onSubmit: async valores => {\n\n            const { nombre, apellido, empresa, email, telefono } = valores\n\n            try {\n                const { data } = await nuevoCliente({\n                    variables: {\n                        input: {\n                            nombre,\n                            apellido,\n                            empresa,\n                            email,\n                            telefono\n                        }\n                    }\n                });\n                // console.log(data.nuevoCliente);\n                router.push('/'); // redireccionar hacia clientes\n            } catch (error) {\n                guardarMensaje(error.message.replace('GraphQL error: ', ''));\n\n                setTimeout(() => {\n                    guardarMensaje(null);\n                }, 2000);\n            }\n        }\n    })\n\n    const mostrarMensaje = () => {\n        return (\n            <div className=\"bg-white py-2 px-3 w-full my-3 max-w-sm text-center mx-auto\">\n                <p>{mensaje}</p>\n            </div>\n        )\n    }\n\n    return (\n        <Layout>\n            <h1 className=\"text-2xl text-gray-800 font-light\">Nuevo Cliente</h1>\n\n            {mensaje && mostrarMensaje()}\n\n            <div className=\"flex justify-center mt-5\">\n                <div className=\"w-full max-w-lg\">\n                    <form\n                        className=\"bg-white shadow-md px-8 pt-6 pb-8 mb-4\"\n                        onSubmit={formik.handleSubmit}\n                    >\n                        <div className=\"mb-4\">\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"nombre\">\n                                Nombre\n                                </label>\n\n                            <input\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                id=\"nombre\"\n                                type=\"text\"\n                                placeholder=\"Nombre Cliente\"\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                value={formik.values.nombre}\n                            />\n                        </div>\n\n                        {formik.touched.nombre && formik.errors.nombre ? (\n                            <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                <p className=\"font-bold\">Error</p>\n                                <p>{formik.errors.nombre}</p>\n                            </div>\n                        ) : null}\n\n                        <div className=\"mb-4\">\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"apellido\">\n                                Apellido\n                                </label>\n\n                            <input\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                id=\"apellido\"\n                                type=\"text\"\n                                placeholder=\"Apellido Cliente\"\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                value={formik.values.apellido}\n                            />\n                        </div>\n\n                        {formik.touched.apellido && formik.errors.apellido ? (\n                            <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                <p className=\"font-bold\">Error</p>\n                                <p>{formik.errors.apellido}</p>\n                            </div>\n                        ) : null}\n\n                        <div className=\"mb-4\">\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"empresa\">\n                                Dirección\n                                </label>\n\n                            <input\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                id=\"direccion\"\n                                type=\"text\"\n                                placeholder=\"Dirección Cliente\"\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                value={formik.values.direccion}\n                            />\n                        </div>\n\n                        {formik.touched.direccion && formik.errors.direccion ? (\n                            <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                <p className=\"font-bold\">Error</p>\n                                <p>{formik.errors.direccion}</p>\n                            </div>\n                        ) : null}\n\n                        <div className=\"mb-4\">\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"empresa\">\n                                Empresa\n                                </label>\n\n                            <input\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                id=\"empresa\"\n                                type=\"text\"\n                                placeholder=\"Empresa Cliente\"\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                value={formik.values.empresa}\n                            />\n                        </div>\n\n                        {formik.touched.empresa && formik.errors.empresa ? (\n                            <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                <p className=\"font-bold\">Error</p>\n                                <p>{formik.errors.empresa}</p>\n                            </div>\n                        ) : null}\n\n                        <div className=\"mb-4\">\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"email\">\n                                Email\n                                </label>\n\n                            <input\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                id=\"email\"\n                                type=\"email\"\n                                placeholder=\"Email Cliente\"\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                value={formik.values.email}\n                            />\n                        </div>\n\n                        {formik.touched.email && formik.errors.email ? (\n                            <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                <p className=\"font-bold\">Error</p>\n                                <p>{formik.errors.email}</p>\n                            </div>\n                        ) : null}\n\n                        <div className=\"mb-4\">\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"telefono\">\n                                Teléfono\n                                </label>\n\n                            <input\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                id=\"telefono\"\n                                type=\"tel\"\n                                placeholder=\"Teléfono Cliente\"\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                value={formik.values.telefono}\n                            />\n                        </div>\n\n                        <input\n                            type=\"submit\"\n                            className=\"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\"\n                            value=\"Registrar Cliente\"\n                        />\n                    </form>\n                </div>\n            </div>\n        </Layout>\n\n    );\n}\n\nexport default NuevoCliente;"]},"metadata":{},"sourceType":"module"}